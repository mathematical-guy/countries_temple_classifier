{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"temple_classifier","provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"OFVjgnh7kUE9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619873539561,"user_tz":-330,"elapsed":4278,"user":{"displayName":"Mohit Talreja","photoUrl":"","userId":"02442554525112871358"}},"outputId":"cba9d1cd-cd17-4438-993e-bbbf36a44479"},"source":["%pip install opencv-python"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: opencv-python in /usr/local/lib/python3.7/dist-packages (4.1.2.30)\n","Requirement already satisfied: numpy>=1.14.5 in /usr/local/lib/python3.7/dist-packages (from opencv-python) (1.19.5)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"b7NsrzCLkUBu","executionInfo":{"status":"ok","timestamp":1619875097430,"user_tz":-330,"elapsed":1029,"user":{"displayName":"Mohit Talreja","photoUrl":"","userId":"02442554525112871358"}}},"source":["import os\n","import cv2\n","import numpy as np\n"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"mF19-HlKP3jI"},"source":["path = '/content/drive/MyDrive/Complete-Deep-Learning-master/train'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gLSZ8H9__M9B","executionInfo":{"status":"ok","timestamp":1619873595365,"user_tz":-330,"elapsed":26579,"user":{"displayName":"Mohit Talreja","photoUrl":"","userId":"02442554525112871358"}},"outputId":"c2306e7b-9c85-4e15-feb7-1d2d9f47de6a"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lThoyg84_Zj8","executionInfo":{"status":"ok","timestamp":1619875761249,"user_tz":-330,"elapsed":1383,"user":{"displayName":"Mohit Talreja","photoUrl":"","userId":"02442554525112871358"}},"outputId":"630c09e3-90e5-4ae6-c765-e4c6d7192407"},"source":["data = os.getcwd() + '/drive/MyDrive/all_data'\n","print(len(os.listdir(data)))\n","# print(os.listdir(data))"],"execution_count":15,"outputs":[{"output_type":"stream","text":["714\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AlV7d69arOU0","executionInfo":{"status":"ok","timestamp":1619875109504,"user_tz":-330,"elapsed":1223,"user":{"displayName":"Mohit Talreja","photoUrl":"","userId":"02442554525112871358"}}},"source":["countries = ['Malaysia+Indonesia', 'Hungary+Slovakia+Croatia', 'Russia', \n","             'Thailand', 'Portugal+Brazil', 'Japan', 'Spain', 'Armenia', \n","             'Indonesia-Bali', 'Australia', 'Germany']\n","\n","# ---------------------------------------------------------------------------\n","\n","def create_dataset():\n","    global countries\n","    X = []\n","    y = []\n","    img_size = 100\n","    for file in os.listdir(data):\n","        filename = os.path.join(data, file)\n","        image = cv2.imread(filename)\n","        image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n","        image = cv2.resize(image, (img_size, img_size))\n","        image = np.array(image, dtype=np.uint32).reshape(img_size*img_size)\n","        X.append(image)\n","        label = countries.index(file.split('_')[0])\n","        # print(\"Country: \", labe)\n","        y.append(label)\n","    \n","    X = np.array(X)\n","    y = np.array(y)\n","    # print(\"Y: \", y)\n","    return X, y"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"C8X58Mp-5-i2","executionInfo":{"status":"ok","timestamp":1619875759848,"user_tz":-330,"elapsed":648283,"user":{"displayName":"Mohit Talreja","photoUrl":"","userId":"02442554525112871358"}}},"source":["X, y = create_dataset()"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"blG0ziqV6iwy","executionInfo":{"status":"ok","timestamp":1619875781757,"user_tz":-330,"elapsed":1243,"user":{"displayName":"Mohit Talreja","photoUrl":"","userId":"02442554525112871358"}},"outputId":"8b1aff22-f71b-4f6c-a7d4-2fca603eabe3"},"source":["print(X.shape)\n","print(y.shape)"],"execution_count":16,"outputs":[{"output_type":"stream","text":["(714, 10000)\n","(714,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"diAtmEfEIKd7","executionInfo":{"status":"ok","timestamp":1619875939647,"user_tz":-330,"elapsed":1026,"user":{"displayName":"Mohit Talreja","photoUrl":"","userId":"02442554525112871358"}}},"source":["# Model Preparation\n","#-----------------------------------------------------------\n","from tensorflow import keras\n","import tensorflow\n","from keras import Sequential\n","from keras.layers import Dense\n","\n","#-----------------------------------------------------------\n","y = np.array(y)\n","\n","ghanshaym_ka_network = Sequential()\n","ghanshaym_ka_network.add(Dense(128, activation = 'relu', input_dim = 10000))\n","ghanshaym_ka_network.add(Dense(256, activation = 'relu'))\n","ghanshaym_ka_network.add(Dense(128, activation = 'relu'))\n","ghanshaym_ka_network.add(Dense(64, activation = 'relu'))\n","ghanshaym_ka_network.add(Dense(11, activation = 'softmax'))\n","\n","#-----------------------------------------------------------\n","\n","ghanshaym_ka_network.compile(loss = keras.losses.SparseCategoricalCrossentropy(), optimizer = 'adam', metrics = 'accuracy')\n","# ghanshaym_ka_network.fit(X, y, epochs=10)\n"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"id":"YKA5ckY6vv3a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619875950748,"user_tz":-330,"elapsed":5035,"user":{"displayName":"Mohit Talreja","photoUrl":"","userId":"02442554525112871358"}},"outputId":"8fc87c26-c4c6-4712-edb6-3f94d2c393c9"},"source":["ghanshaym_ka_network.fit(X, y, epochs=50)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["Epoch 1/50\n","23/23 [==============================] - 0s 3ms/step - loss: 395.2574 - accuracy: 0.1171\n","Epoch 2/50\n","23/23 [==============================] - 0s 3ms/step - loss: 177.4937 - accuracy: 0.1492\n","Epoch 3/50\n","23/23 [==============================] - 0s 3ms/step - loss: 51.9395 - accuracy: 0.1698\n","Epoch 4/50\n","23/23 [==============================] - 0s 3ms/step - loss: 16.4573 - accuracy: 0.1631\n","Epoch 5/50\n","23/23 [==============================] - 0s 3ms/step - loss: 17.9675 - accuracy: 0.2013\n","Epoch 6/50\n","23/23 [==============================] - 0s 3ms/step - loss: 10.7735 - accuracy: 0.1399\n","Epoch 7/50\n","23/23 [==============================] - 0s 3ms/step - loss: 7.7663 - accuracy: 0.1930\n","Epoch 8/50\n","23/23 [==============================] - 0s 3ms/step - loss: 4.8779 - accuracy: 0.2593\n","Epoch 9/50\n","23/23 [==============================] - 0s 3ms/step - loss: 4.3219 - accuracy: 0.2124\n","Epoch 10/50\n","23/23 [==============================] - 0s 3ms/step - loss: 3.5738 - accuracy: 0.3058\n","Epoch 11/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.4409 - accuracy: 0.3905\n","Epoch 12/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.3680 - accuracy: 0.4192\n","Epoch 13/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.8589 - accuracy: 0.3863\n","Epoch 14/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.4674 - accuracy: 0.4315\n","Epoch 15/50\n","23/23 [==============================] - 0s 3ms/step - loss: 4.0967 - accuracy: 0.3329\n","Epoch 16/50\n","23/23 [==============================] - 0s 3ms/step - loss: 3.9305 - accuracy: 0.3316\n","Epoch 17/50\n","23/23 [==============================] - 0s 3ms/step - loss: 1.9390 - accuracy: 0.4541\n","Epoch 18/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.5831 - accuracy: 0.3924\n","Epoch 19/50\n","23/23 [==============================] - 0s 3ms/step - loss: 9.0808 - accuracy: 0.2142\n","Epoch 20/50\n","23/23 [==============================] - 0s 3ms/step - loss: 3.8293 - accuracy: 0.3084\n","Epoch 21/50\n","23/23 [==============================] - 0s 3ms/step - loss: 3.5599 - accuracy: 0.3832\n","Epoch 22/50\n","23/23 [==============================] - 0s 3ms/step - loss: 5.6493 - accuracy: 0.2905\n","Epoch 23/50\n","23/23 [==============================] - 0s 3ms/step - loss: 3.3280 - accuracy: 0.3611\n","Epoch 24/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.7182 - accuracy: 0.2959\n","Epoch 25/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.3027 - accuracy: 0.1929\n","Epoch 26/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.0296 - accuracy: 0.2465\n","Epoch 27/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.0117 - accuracy: 0.2284\n","Epoch 28/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.0693 - accuracy: 0.2891\n","Epoch 29/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.0773 - accuracy: 0.2304\n","Epoch 30/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.3196 - accuracy: 0.0958\n","Epoch 31/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.0745 - accuracy: 0.1752\n","Epoch 32/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.2387 - accuracy: 0.1381\n","Epoch 33/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.0988 - accuracy: 0.2438\n","Epoch 34/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.2579 - accuracy: 0.2385\n","Epoch 35/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.2108 - accuracy: 0.2471\n","Epoch 36/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.2002 - accuracy: 0.2706\n","Epoch 37/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.2464 - accuracy: 0.2371\n","Epoch 38/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.0921 - accuracy: 0.2470\n","Epoch 39/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.2211 - accuracy: 0.2153\n","Epoch 40/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.0748 - accuracy: 0.2500\n","Epoch 41/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.1402 - accuracy: 0.2432\n","Epoch 42/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.1513 - accuracy: 0.2314\n","Epoch 43/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.2376 - accuracy: 0.2274\n","Epoch 44/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.1600 - accuracy: 0.2351\n","Epoch 45/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.0945 - accuracy: 0.2641\n","Epoch 46/50\n","23/23 [==============================] - 0s 3ms/step - loss: 1.9569 - accuracy: 0.3505\n","Epoch 47/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.2011 - accuracy: 0.1915\n","Epoch 48/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.1066 - accuracy: 0.2655\n","Epoch 49/50\n","23/23 [==============================] - 0s 3ms/step - loss: 2.1436 - accuracy: 0.2911\n","Epoch 50/50\n","23/23 [==============================] - 0s 3ms/step - loss: 1.8608 - accuracy: 0.3879\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7fb422006310>"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"F33TD9WKH7Cm"},"source":[""],"execution_count":null,"outputs":[]}]}